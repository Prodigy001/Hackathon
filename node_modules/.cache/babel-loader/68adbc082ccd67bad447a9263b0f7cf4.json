{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhijeets\\\\Downloads\\\\app\\\\hackathon\\\\src\\\\context\\\\colleges.js\";\nimport React from \"react\";\nimport Axios from \"axios\";\nimport url from \"../utils/URL\";\nimport { featuredColleges, flattenColleges, paginate } from \"../utils/helpers\";\nexport const CollegeContext = React.createContext();\nexport default function CollegeProvider({\n  children\n}) {\n  const [loading, setLoading] = React.useState(false);\n  const [colleges, setColleges] = React.useState([]);\n  const [featured, setFeatured] = React.useState([]); // extra state values\n\n  const [page, setPage] = React.useState(0);\n  const [sorted, setSorted] = React.useState([]);\n  const [filters, setFilters] = React.useState({\n    search: \"\",\n    courses: \"all\",\n    financialAid: false,\n    fee: \"all\"\n  });\n\n  const changePage = index => {\n    setPage(index);\n  };\n\n  const updateFilters = e => {\n    const type = e.target.type;\n    const filter = e.target.name;\n    const value = e.target.value;\n    let filterValue;\n\n    if (type === \"checkbox\") {\n      filterValue = e.target.checked;\n    } else if (type === \"radio\") {\n      value === \"all\" ? filterValue = value : filterValue = parseInt(value);\n    } else {\n      filterValue = value;\n    }\n\n    setFilters({ ...filters,\n      [filter]: filterValue\n    });\n  };\n\n  React.useEffect(() => {\n    setLoading(true);\n    Axios.get(`${url}/colleges`).then(response => {\n      const featured = featuredColleges(flattenColleges(response.data));\n      const colleges = flattenColleges(response.data);\n      setSorted(paginate(colleges));\n      setColleges(colleges);\n      setFeatured(featured);\n      setLoading(false);\n    });\n    return () => {};\n  }, []);\n  React.useLayoutEffect(() => {\n    let newColleges = [...colleges].sort((a, b) => a.fee - b.fee);\n    const {\n      search,\n      course,\n      shipping,\n      fee\n    } = filters; //\n\n    if (course !== \"all\") {\n      newColleges = newColleges.filter(college => college.course === course);\n    }\n\n    if (shipping !== false) {\n      newColleges = newColleges.filter(college => college.free_shipping === shipping);\n    }\n\n    if (fee !== \"all\") {\n      newColleges = newColleges.filter(college => {\n        if (fee === 0) {\n          return college.fee < 300;\n        } else if (fee === 300) {\n          return college.fee > 300 && college.fee < 650;\n        } else {\n          return college.fee > 650;\n        }\n      });\n    }\n\n    if (search !== \"\") {\n      newColleges = newColleges.filter(college => {\n        let name = college.name.toLowerCase().trim();\n        return name.startsWith(search) ? college : null;\n      });\n    }\n\n    setPage(0);\n    setSorted(paginate(newColleges));\n  }, [filters, colleges]);\n  return React.createElement(CollegeContext.Provider, {\n    value: {\n      colleges,\n      loading,\n      featured,\n      sorted,\n      page,\n      changePage,\n      filters,\n      updateFilters\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, children);\n}","map":{"version":3,"sources":["C:/Users/abhijeets/Downloads/app/hackathon/src/context/colleges.js"],"names":["React","Axios","url","featuredColleges","flattenColleges","paginate","CollegeContext","createContext","CollegeProvider","children","loading","setLoading","useState","colleges","setColleges","featured","setFeatured","page","setPage","sorted","setSorted","filters","setFilters","search","courses","financialAid","fee","changePage","index","updateFilters","e","type","target","filter","name","value","filterValue","checked","parseInt","useEffect","get","then","response","data","useLayoutEffect","newColleges","sort","a","b","course","shipping","college","free_shipping","toLowerCase","trim","startsWith"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport url from \"../utils/URL\";\r\nimport { featuredColleges, flattenColleges, paginate } from \"../utils/helpers\";\r\n\r\nexport const CollegeContext = React.createContext();\r\n\r\nexport default function CollegeProvider({ children }) {\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [colleges, setColleges] = React.useState([]);\r\n  const [featured, setFeatured] = React.useState([]);\r\n  // extra state values\r\n  const [page, setPage] = React.useState(0);\r\n  const [sorted, setSorted] = React.useState([]);\r\n  const [filters, setFilters] = React.useState({\r\n    search: \"\",\r\n    courses: \"all\",\r\n    financialAid: false,\r\n    fee: \"all\"\r\n  });\r\n  const changePage = index => {\r\n    setPage(index);\r\n  };\r\n  const updateFilters = e => {\r\n    const type = e.target.type;\r\n    const filter = e.target.name;\r\n    const value = e.target.value;\r\n    let filterValue;\r\n    if (type === \"checkbox\") {\r\n      filterValue = e.target.checked;\r\n    } else if (type === \"radio\") {\r\n      value === \"all\" ? (filterValue = value) : (filterValue = parseInt(value));\r\n    } else {\r\n      filterValue = value;\r\n    }\r\n    setFilters({ ...filters, [filter]: filterValue });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    Axios.get(`${url}/colleges`).then(response => {\r\n      const featured = featuredColleges(flattenColleges(response.data));\r\n      const colleges = flattenColleges(response.data);\r\n      setSorted(paginate(colleges));\r\n      setColleges(colleges);\r\n      setFeatured(featured);\r\n      setLoading(false);\r\n    });\r\n    return () => {};\r\n  }, []);\r\n\r\n  React.useLayoutEffect(() => {\r\n    let newColleges = [...colleges].sort((a, b) => a.fee - b.fee);\r\n    const { search, course, shipping, fee } = filters;\r\n    //\r\n    if (course !== \"all\") {\r\n      newColleges = newColleges.filter(college => college.course === course);\r\n    }\r\n    if (shipping !== false) {\r\n      newColleges = newColleges.filter(\r\n        college => college.free_shipping === shipping\r\n      );\r\n    }\r\n    if (fee !== \"all\") {\r\n      newColleges = newColleges.filter(college => {\r\n        if (fee === 0) {\r\n          return college.fee < 300;\r\n        } else if (fee === 300) {\r\n          return college.fee > 300 && college.fee < 650;\r\n        } else {\r\n          return college.fee > 650;\r\n        }\r\n      });\r\n    }\r\n    if (search !== \"\") {\r\n      newColleges = newColleges.filter(college => {\r\n        let name = college.name.toLowerCase().trim();\r\n        return name.startsWith(search) ? college : null;\r\n      });\r\n    }\r\n\r\n    setPage(0);\r\n\r\n    setSorted(paginate(newColleges));\r\n  }, [filters, colleges]);\r\n\r\n  return (\r\n    <CollegeContext.Provider\r\n      value={{\r\n        colleges,\r\n        loading,\r\n        featured,\r\n        sorted,\r\n        page,\r\n        changePage,\r\n        filters,\r\n        updateFilters\r\n      }}\r\n    >\r\n      {children}\r\n    </CollegeContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}