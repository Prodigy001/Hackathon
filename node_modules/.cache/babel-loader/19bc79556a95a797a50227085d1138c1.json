{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhijeets\\\\Downloads\\\\app\\\\hackathon\\\\src\\\\context\\\\cart.js\";\nimport React from \"react\";\n\nfunction getCartFromLocalStorage() {\n  return localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : [];\n}\n\nconst CartContext = React.createContext();\n\nfunction CartProvider({\n  children\n}) {\n  const [cart, setCart] = React.useState(getCartFromLocalStorage());\n  const [cartItems, setCartItems] = React.useState(0);\n  React.useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    let newCartItems = cart.reduce((total, cartItem) => {\n      return total += cartItem.amount;\n    }, 0);\n    setCartItems(newCartItems);\n  }, [cart]);\n\n  const removeItem = id => {\n    setCart([...cart].filter(item => item.id !== id));\n  };\n\n  const addToCart = product => {\n    const {\n      id,\n      image,\n      title,\n      price\n    } = product;\n    const item = [...cart].find(item => item.id === id);\n\n    if (item) {\n      alert(\"This college is already in the cart\");\n    } else {\n      const newItem = {\n        id,\n        image,\n        title,\n        price,\n        amount: 1\n      };\n      const newCart = [...cart, newItem];\n      setCart(newCart);\n    }\n  };\n\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  return React.createElement(CartContext.Provider, {\n    value: {\n      cart,\n      cartItems,\n      removeItem,\n      clearCart,\n      addToCart\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, children);\n}\n\nexport { CartContext, CartProvider };","map":{"version":3,"sources":["C:/Users/abhijeets/Downloads/app/hackathon/src/context/cart.js"],"names":["React","getCartFromLocalStorage","localStorage","getItem","JSON","parse","CartContext","createContext","CartProvider","children","cart","setCart","useState","cartItems","setCartItems","useEffect","setItem","stringify","newCartItems","reduce","total","cartItem","amount","removeItem","id","filter","item","addToCart","product","image","title","price","find","alert","newItem","newCart","clearCart"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,uBAAT,GAAmC;AACjC,SAAOC,YAAY,CAACC,OAAb,CAAqB,MAArB,IACHC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADG,GAEH,EAFJ;AAGD;;AAED,MAAMG,WAAW,GAAGN,KAAK,CAACO,aAAN,EAApB;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,KAAK,CAACY,QAAN,CAAeX,uBAAuB,EAAtC,CAAxB;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bd,KAAK,CAACY,QAAN,CAAe,CAAf,CAAlC;AACAZ,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AACpBb,IAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6BZ,IAAI,CAACa,SAAL,CAAeP,IAAf,CAA7B;AACA,QAAIQ,YAAY,GAAGR,IAAI,CAACS,MAAL,CAAY,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAClD,aAAQD,KAAK,IAAIC,QAAQ,CAACC,MAA1B;AACD,KAFkB,EAEhB,CAFgB,CAAnB;AAGAR,IAAAA,YAAY,CAACI,YAAD,CAAZ;AACD,GAND,EAMG,CAACR,IAAD,CANH;;AAOA,QAAMa,UAAU,GAAGC,EAAE,IAAI;AACvBb,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUe,MAAV,CAAiBC,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAArC,CAAD,CAAP;AACD,GAFD;;AAGA,QAAMG,SAAS,GAAGC,OAAO,IAAI;AAC3B,UAAM;AAAEJ,MAAAA,EAAF;AAAMK,MAAAA,KAAN;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA;AAApB,QAA8BH,OAApC;AACA,UAAMF,IAAI,GAAG,CAAC,GAAGhB,IAAJ,EAAUsB,IAAV,CAAeN,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAAnC,CAAb;;AACA,QAAIE,IAAJ,EAAU;AACRO,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACD,KAFD,MAEO;AACL,YAAMC,OAAO,GAAG;AAAEV,QAAAA,EAAF;AAAMK,QAAAA,KAAN;AAAaC,QAAAA,KAAb;AAAoBC,QAAAA,KAApB;AAA2BT,QAAAA,MAAM,EAAE;AAAnC,OAAhB;AACA,YAAMa,OAAO,GAAG,CAAC,GAAGzB,IAAJ,EAAUwB,OAAV,CAAhB;AACAvB,MAAAA,OAAO,CAACwB,OAAD,CAAP;AACD;AACF,GAVD;;AAWA,QAAMC,SAAS,GAAG,MAAM;AACtBzB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFD;;AAIA,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAED,MAAAA,IAAF;AAAQG,MAAAA,SAAR;AAAmBU,MAAAA,UAAnB;AAA+Ba,MAAAA,SAA/B;AAA0CT,MAAAA;AAA1C,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGlB,QAHH,CADF;AAOD;;AACD,SAASH,WAAT,EAAsBE,YAAtB","sourcesContent":["import React from \"react\";\r\n\r\nfunction getCartFromLocalStorage() {\r\n  return localStorage.getItem(\"cart\")\r\n    ? JSON.parse(localStorage.getItem(\"cart\"))\r\n    : [];\r\n}\r\n\r\nconst CartContext = React.createContext();\r\n\r\nfunction CartProvider({ children }) {\r\n  const [cart, setCart] = React.useState(getCartFromLocalStorage());\r\n  const [cartItems, setCartItems] = React.useState(0);\r\n  React.useEffect(() => {\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    let newCartItems = cart.reduce((total, cartItem) => {\r\n      return (total += cartItem.amount);\r\n    }, 0);\r\n    setCartItems(newCartItems);\r\n  }, [cart]);\r\n  const removeItem = id => {\r\n    setCart([...cart].filter(item => item.id !== id));\r\n  };\r\n  const addToCart = product => {\r\n    const { id, image, title, price } = product;\r\n    const item = [...cart].find(item => item.id === id);\r\n    if (item) {\r\n      alert(\"This college is already in the cart\");\r\n    } else {\r\n      const newItem = { id, image, title, price, amount: 1 };\r\n      const newCart = [...cart, newItem];\r\n      setCart(newCart);\r\n    }\r\n  };\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{ cart, cartItems, removeItem, clearCart, addToCart }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\nexport { CartContext, CartProvider };\r\n"]},"metadata":{},"sourceType":"module"}