{"ast":null,"code":"import url from \"./URL\"; // helper functions\n//flatten\n\nexport function flattenColleges(data) {\n  return data.map(college => {\n    let image = college.thumbnail && college.thumbnail.url || null;\n    return { ...college,\n      image\n    }; //let image = `${url}${item.image.url}`\n  });\n}\nexport function featuredColleges(data) {\n  return data.filter(college => {\n    return college.rank < 9;\n  });\n}\nexport function paginate(colleges) {\n  const collegesPerPage = 8;\n  const numberOfPages = Math.ceil(colleges.length / collegesPerPage); // const newColleges = Array.from({ length: numberOfPages }, (_, index) => {\n  //   return colleges.splice(0, collegesPerPage);\n  // });\n\n  const newColleges = Array.from({\n    length: numberOfPages\n  }, (_, index) => {\n    const start = index * collegesPerPage;\n    return colleges.slice(start, start + collegesPerPage);\n  });\n  return newColleges;\n}","map":{"version":3,"sources":["C:/Users/abhijeets/Downloads/app/hackathon/src/utils/helpers.js"],"names":["url","flattenColleges","data","map","college","image","thumbnail","featuredColleges","filter","rank","paginate","colleges","collegesPerPage","numberOfPages","Math","ceil","length","newColleges","Array","from","_","index","start","slice"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB,C,CACA;AAEA;;AACA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,SAAOA,IAAI,CAACC,GAAL,CAASC,OAAO,IAAI;AACzB,QAAIC,KAAK,GAAID,OAAO,CAACE,SAAR,IAAqBF,OAAO,CAACE,SAAR,CAAkBN,GAAxC,IAAgD,IAA5D;AACA,WAAO,EAAE,GAAGI,OAAL;AAAcC,MAAAA;AAAd,KAAP,CAFyB,CAGzB;AACD,GAJM,CAAP;AAKD;AAED,OAAO,SAASE,gBAAT,CAA0BL,IAA1B,EAAgC;AACrC,SAAOA,IAAI,CAACM,MAAL,CAAYJ,OAAO,IAAI;AAC5B,WAAOA,OAAO,CAACK,IAAR,GAAe,CAAtB;AACD,GAFM,CAAP;AAGD;AAED,OAAO,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AACjC,QAAMC,eAAe,GAAG,CAAxB;AACA,QAAMC,aAAa,GAAGC,IAAI,CAACC,IAAL,CAAUJ,QAAQ,CAACK,MAAT,GAAkBJ,eAA5B,CAAtB,CAFiC,CAGjC;AACA;AACA;;AACA,QAAMK,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAW;AAAEH,IAAAA,MAAM,EAAEH;AAAV,GAAX,EAAsC,CAACO,CAAD,EAAIC,KAAJ,KAAc;AACtE,UAAMC,KAAK,GAAGD,KAAK,GAAGT,eAAtB;AACA,WAAOD,QAAQ,CAACY,KAAT,CAAeD,KAAf,EAAsBA,KAAK,GAAGV,eAA9B,CAAP;AACD,GAHmB,CAApB;AAIA,SAAOK,WAAP;AACD","sourcesContent":["import url from \"./URL\";\r\n// helper functions\r\n\r\n//flatten\r\nexport function flattenColleges(data) {\r\n  return data.map(college => {\r\n    let image = (college.thumbnail && college.thumbnail.url) || null;\r\n    return { ...college, image };\r\n    //let image = `${url}${item.image.url}`\r\n  });\r\n}\r\n\r\nexport function featuredColleges(data) {\r\n  return data.filter(college => {\r\n    return college.rank < 9;\r\n  });\r\n}\r\n\r\nexport function paginate(colleges) {\r\n  const collegesPerPage = 8;\r\n  const numberOfPages = Math.ceil(colleges.length / collegesPerPage);\r\n  // const newColleges = Array.from({ length: numberOfPages }, (_, index) => {\r\n  //   return colleges.splice(0, collegesPerPage);\r\n  // });\r\n  const newColleges = Array.from({ length: numberOfPages }, (_, index) => {\r\n    const start = index * collegesPerPage;\r\n    return colleges.slice(start, start + collegesPerPage);\r\n  });\r\n  return newColleges;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}